buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
repositories {
    maven{url = 'https://dvs1.progwml6.com/files/maven/'}
    maven{url 'https://maven.blamejared.com'}
}

version = property('version')
group = property('group')
archivesBaseName = property('id')

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: property('mc.version')
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${project.name}.main"
            mods {
                customquests {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('serverrun')
            args 'nogui'
            ideaModule "${project.name}.main"
            mods {
                customquests {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('resourcesrun')
            ideaModule "${project.name}.main"
            args '--mod', 'customquests',
                    '--all',
                    '--output', file('src/main/generated/resources/'),
                    '--existing', file('src/main/resources'),
                    '--existing', file('src/main/generated/resources/')
            mods {
                customquests {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${property('mc.version')}-${property('forge.version')}"

    compileOnly fg.deobf("mezz.jei:jei-${property('jei.mcversion')}:${property('jei.version')}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${property('jei.mcversion')}:${property('jei.version')}")

    implementation 'com.intellij:annotations:+@jar'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.property('id'),
                "Specification-Vendor"    : project.property('authors'),
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : project.property('group'),
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
def reobfFile = file("$buildDir/reobfJar/output.jar")
jar.finalizedBy('reobfJar')

curseforge {
    if (project.hasProperty('CF_API_KEY')){
        apiKey = project.getProperty('CF_API_KEY')
    }
    project {
        id = "${project.property('curseforge_project.id')}"
        changelogType = 'markdown'
        changelog = file('CHANGELOG.md')
        releaseType = "release"
        addGameVersion "Forge"
        addGameVersion "${project.property('mc.version')}"
        addGameVersion "${project.property('java.version')}"
        mainArtifact(jar) {
            displayName = "CustomQuests-${project.property('mc.version')}-${project.property('version')}.jar"
        }
    }
    options {
        javaVersionAutoDetect = false
    }
}